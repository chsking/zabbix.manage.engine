# -*- coding: utf-8 -*-import osbasedir = os.path.abspath(os.path.dirname(__file__))class Config():    # DEBUG = True    SQLALCHEMY_TRACK_MODIFICATIONS = True    # SQLALCHEMY_COMMIT_ON_TEARDOWN = True    SQLALCHEMY_RECORD_QUERIES = True    SQLALCHEMY_DATABASE_URI = 'sqlite:///' + os.path.join(basedir, 'data.sqlite')    # SQLALCHEMY_DATABASE_URI = os.environ.get('DATABASE_URL') or 'sqlite:///' + os.path.join(basedir, 'data.sqlite')    ARTICLES_PER_PAGE = 10    COMMENTS_PER_PAGE = 6    SECRET_KEY = 'secret key to protect from csrf'    WTF_CSRF_SECRET_KEY = 'random key for form' # for csrf protection    # Take good care of 'SECRET_KEY' and 'WTF_CSRF_SECRET_KEY', if you use the    # bootstrap extension to create a form, it is Ok to use 'SECRET_KEY',    # but when you use tha style like '{{ form.name.labey }}:{{ form.name() }}',    # you must do this for yourself to use the wtf, more about this, you can    # take a reference to the book <<Flask Framework Cookbook>>.    # But the book only have the version of English.    LOG_PATH = './logs/'    LOG_LEVEL = 'DEBUG'    ADMINS = ('bin.yuan@china.zhaogang.com')    # # mail    MAIL_PORT = 25    MAIL_USE_TLS = False    MAIL_USE_SSL = False    MAIL_DEBUG = True    MAIL_SERVER = 'mail.china.zhaogang.com'    MAIL_USER = 'ops@gangtiequn.com'    MAIL_PASSWORD = 'Y444G9'    MAIL_SENDER = 'ops@gangtiequn.com'    @staticmethod    def init_app(app):        pass# 开发环境class Development(Config):    # SQLALCHEMY_DATABASE_URI = config_preprecessing.database_uri    DEBUG = True# 测试环境class Test(Config):    DEBUG = True# 正式环境class Product(Config):    # SQLALCHEMY_DATABASE_URI = config_preprecessing.database_uri    DEBUG = False