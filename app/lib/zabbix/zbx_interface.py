#!/usr/bin/env python# -*- coding: utf-8 -*-# Author: Yuanbin# Datetime: 20180110from __init__ import *class HostInterface:    def __init__(self, zbx_base=None):        self.url = zbx_base.url        self.header = zbx_base.header        self.authID = zbx_base.authID    def create(self, hostid, type, main, ip, port=10050):        '''        :param hostid: 主机ID        :param type: 接口类型        :param main: 是否置为默认接口        :param ip: 新增接口通过IP访问，ip地址        :return: 返回新的接口ID        type：1——agent；2——snmp；3——ipmi；4——jmx；        main：0——not default；1——default；        useip：0——use DNS name；1——use ip addreess for this host interface.        bulk：0——don't use bulk requests；1——（default）use bulk requests.#whether to use bulk snmp requests.        '''        data = json.dumps(            {                "jsonrpc": "2.0",                "method": "hostinterface.create",                "params": {                    "hostid": hostid,                    "type": type,                    "main": main,                    "useip": 1,                    "ip": ip,                    "dns": "",                    "port": port,                },                "auth": self.authID,                "id": 1            })        try:            result = requests.post(self.url, data=data, headers=self.header)            response = json.loads(result.content)            res = response['result']            if (res != 0) and (len(res) != 0):                hostinterface_res = response['result']            print "主机接口创建成功:\t%s" % hostinterface_res        except Exception, e:            message = u'创建主机接口（Create host interface failure）失败!'            print message, e            traceback.print_exc()            return False        return hostinterface_res    def delete(self, interfaceid):        data = json.dumps(            {                "jsonrpc": "2.0",                "method": "hostinterface.delete",                "params": [                    interfaceid                ],                "auth": self.authID,                "id": 1            }        )        try:            result = requests.post(self.url, data=data, headers=self.header)            response = json.loads(result.content)            res = response['result']            if (res != 0) and (len(res) != 0):                hostinterface_res = response['result']            print "主机接口删除成功:\t%s" % hostinterface_res        except Exception, e:            message = u'删除主机接口（Delete host interface failure）失败!'            print message, e            traceback.print_exc()            return False        return hostinterface_res    def get(self, **kwargs):        json_data = {            "jsonrpc": "2.0",            "method": "hostinterface.get",            "params": {                "output": "extend",                # "hostids": hostid            },            "auth": self.authID,            "id": 1        }        for k, v in kwargs.items():            json_data['params'][k] = v        # 将动态参数传递到指定格式参数        data = json.dumps(json_data)        try:            result = requests.post(self.url, data=data, headers=self.header)            response = json.loads(result.content)            res = response['result']            if (res != 0) and (len(res) != 0):                print "主机接口信息获取成功:\t%s" % res        except Exception, e:            message = u'获取主机接口信息（Get host interface failure）失败!'            print message, e            traceback.print_exc()            return []        return res    def update(self, interfaceid, **kwargs):        json_data = {            "jsonrpc": "2.0",            "method": "hostinterface.update",            "params": {                "interfaceid": interfaceid            },            "auth": self.authID,            "id": 1        }        for k, v in kwargs.items():            json_data['params'][k] = v        data = json.dumps(json_data)        try:            result = requests.post(self.url, data=data, headers=self.header)            response = json.loads(result.content)            res = response['result']            if (res != 0) and (len(res) != 0):                hostinterface_res = response['result']                print "主机接口更新成功:\t%s" % hostinterface_res                return hostinterface_res        except Exception as e:            message = u"更新主机接口信息（Update host interface failure）失败!"            print message, e            traceback.print_exc()        return False